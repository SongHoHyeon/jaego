<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Maooer 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- member 테이블에 사용할 쿼리 -->
<!-- 
// 1.회원가입 회원 등록(insert)
// 2. (select)
// (update)
// (delete)
 -->

<mapper namespace="memberDao">

	<!-- 1.회원 정보 등록(register) -->
	<insert id="register" parameterType="memberDto">
		INSERT INTO MEMBER (
		 member_email1, member_email2, member_password, member_name,
		member_phone1, member_phone2, member_phone3, member_gender, member_age)
		VALUES (
		 #{memberEmail1}, #{memberEmail2}, #{memberPassword}, #{memberName},
		#{memberPhone1}, #{memberPhone2}, #{memberPhone3}, #{memberGender}, #{memberAge})
	</insert>
	
	<!--이메일 중복 체크 쿼리 -->
	<select id ="checkEmail" parameterType="HashMap" resultType="int">
		SELECT COUNT(*) FROM MEMBER WHERE member_email1=#{memberEmail1} and member_email2=#{memberEmail2};
	</select>
	
	<!-- 로그인 -->
	<select id="login" parameterType="loginDto" resultType="memberDto">
		SELECT * FROM MEMBER
		WHERE CONCAT(MEMBER_EMAIL1,'@',MEMBER_EMAIL2) = #{memberEmail}
		AND MEMBER_PASSWORD = #{memberPassword}
	</select>
	
	
	
	
	
	<!-- 2.임시로 특정 회원 정보 전체 조회. 보통 조회할 때 기본키로 조회하나? 아님 아뒤? 기본키가 좋을듯? -->
	<select id="selectByMemId" parameterType="Integer" resultType="memberDto">
		SELECT * FROM MEMBER
		WHERE member_id = #{memberId}
	</select>
	<select id="selectByEmail1" parameterType="String" resultType="memberDto">
		SELECT * FROM MEMBER
		WHERE member_email1 = #{memberEmail1}
	</select>
	
	<!-- 아이디 찾기, 비밀번호 찾기를 위한.. 쿼리도 필요함 -->
	
	
	<!-- 3.회원 정보 수정.. 어떤 정보를 수정 가능하게 할지 정해야해. %%%%% -->
	<!-- 비밀번호, 핸드폰 번호 123, 나이대  -->
	<update id="update" parameterType="memberDto">
		UPDATE MEMBER SET member_password = #{memberPassword}, member_phone1 = #{memberPhone1}
	</update>
	
	<!-- 4.회원 정보 수정(멘토 여부-멘토 승인됨, 관리자 여부-관리자임) -->
	<update id="updateMentorStatus" parameterType="Integer">
		UPDATE MEMBER SET member_mentorstatus = 1
		WHERE member_id = #{memberId}	
	</update>			
	<update id="updateAuthStatus" parameterType="Integer">
		UPDATE MEMBER SET auth_status = 1
		WHERE member_id = #{memberId}	
	</update>
	
	<!-- 5.회원 정보 삭제 -->
	<delete id="delete" parameterType="Integer">
		DELETE FROM MEMBER WHERE member_id = #{memberId}
	</delete>
	
</mapper>